/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WatchIndexImport } from './routes/watch/index'
import { Route as VolumesIndexImport } from './routes/volumes/index'
import { Route as PsIndexImport } from './routes/ps/index'
import { Route as ImagesIndexImport } from './routes/images/index'
import { Route as ComposeNameImport } from './routes/compose/$name'
import { Route as ImagesIdIndexImport } from './routes/images/$id/index'

// Create/Update Routes

const WatchIndexRoute = WatchIndexImport.update({
  path: '/watch/',
  getParentRoute: () => rootRoute,
} as any)

const VolumesIndexRoute = VolumesIndexImport.update({
  path: '/volumes/',
  getParentRoute: () => rootRoute,
} as any)

const PsIndexRoute = PsIndexImport.update({
  path: '/ps/',
  getParentRoute: () => rootRoute,
} as any)

const ImagesIndexRoute = ImagesIndexImport.update({
  path: '/images/',
  getParentRoute: () => rootRoute,
} as any)

const ComposeNameRoute = ComposeNameImport.update({
  path: '/compose/$name',
  getParentRoute: () => rootRoute,
} as any)

const ImagesIdIndexRoute = ImagesIdIndexImport.update({
  path: '/images/$id/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/compose/$name': {
      id: '/compose/$name'
      path: '/compose/$name'
      fullPath: '/compose/$name'
      preLoaderRoute: typeof ComposeNameImport
      parentRoute: typeof rootRoute
    }
    '/images/': {
      id: '/images/'
      path: '/images'
      fullPath: '/images'
      preLoaderRoute: typeof ImagesIndexImport
      parentRoute: typeof rootRoute
    }
    '/ps/': {
      id: '/ps/'
      path: '/ps'
      fullPath: '/ps'
      preLoaderRoute: typeof PsIndexImport
      parentRoute: typeof rootRoute
    }
    '/volumes/': {
      id: '/volumes/'
      path: '/volumes'
      fullPath: '/volumes'
      preLoaderRoute: typeof VolumesIndexImport
      parentRoute: typeof rootRoute
    }
    '/watch/': {
      id: '/watch/'
      path: '/watch'
      fullPath: '/watch'
      preLoaderRoute: typeof WatchIndexImport
      parentRoute: typeof rootRoute
    }
    '/images/$id/': {
      id: '/images/$id/'
      path: '/images/$id'
      fullPath: '/images/$id'
      preLoaderRoute: typeof ImagesIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  ComposeNameRoute,
  ImagesIndexRoute,
  PsIndexRoute,
  VolumesIndexRoute,
  WatchIndexRoute,
  ImagesIdIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/compose/$name",
        "/images/",
        "/ps/",
        "/volumes/",
        "/watch/",
        "/images/$id/"
      ]
    },
    "/compose/$name": {
      "filePath": "compose/$name.tsx"
    },
    "/images/": {
      "filePath": "images/index.tsx"
    },
    "/ps/": {
      "filePath": "ps/index.tsx"
    },
    "/volumes/": {
      "filePath": "volumes/index.tsx"
    },
    "/watch/": {
      "filePath": "watch/index.tsx"
    },
    "/images/$id/": {
      "filePath": "images/$id/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
